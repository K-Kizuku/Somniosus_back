// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: twitter/tweet/tweet.proto

package tweet

import (
	context "context"
	rpc "github.com/K-Kizuku/Somniosus_back/proto.pb/twitter/tweet/rpc"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_twitter_tweet_tweet_proto protoreflect.FileDescriptor

var file_twitter_tweet_tweet_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2f,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x2f, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x77, 0x65, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x85, 0x02, 0x0a, 0x0c, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x54, 0x4c, 0x12, 0x24, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x54, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x54, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0b, 0x44, 0x65, 0x74, 0x65, 0x6c, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12,
	0x25, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x3b,
	0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x2d, 0x4b,
	0x69, 0x7a, 0x75, 0x6b, 0x75, 0x2f, 0x53, 0x6f, 0x6d, 0x6e, 0x69, 0x6f, 0x73, 0x75, 0x73, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x62, 0x2f, 0x74, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x74, 0x77, 0x65, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var file_twitter_tweet_tweet_proto_goTypes = []interface{}{
	(*rpc.CreateTweetRequest)(nil), // 0: twitter.tweet.rpc.CreateTweetRequest
	(*rpc.GetTweetTLRequest)(nil),  // 1: twitter.tweet.rpc.GetTweetTLRequest
	(*rpc.DeleteTweetRequest)(nil), // 2: twitter.tweet.rpc.DeleteTweetRequest
	(*emptypb.Empty)(nil),          // 3: google.protobuf.Empty
	(*rpc.GetTweetTLResponse)(nil), // 4: twitter.tweet.rpc.GetTweetTLResponse
}
var file_twitter_tweet_tweet_proto_depIdxs = []int32{
	0, // 0: twitter.tweet.TweetService.CreateTweet:input_type -> twitter.tweet.rpc.CreateTweetRequest
	1, // 1: twitter.tweet.TweetService.GetTweetTL:input_type -> twitter.tweet.rpc.GetTweetTLRequest
	2, // 2: twitter.tweet.TweetService.DeteleTweet:input_type -> twitter.tweet.rpc.DeleteTweetRequest
	3, // 3: twitter.tweet.TweetService.CreateTweet:output_type -> google.protobuf.Empty
	4, // 4: twitter.tweet.TweetService.GetTweetTL:output_type -> twitter.tweet.rpc.GetTweetTLResponse
	3, // 5: twitter.tweet.TweetService.DeteleTweet:output_type -> google.protobuf.Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_twitter_tweet_tweet_proto_init() }
func file_twitter_tweet_tweet_proto_init() {
	if File_twitter_tweet_tweet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_twitter_tweet_tweet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_twitter_tweet_tweet_proto_goTypes,
		DependencyIndexes: file_twitter_tweet_tweet_proto_depIdxs,
	}.Build()
	File_twitter_tweet_tweet_proto = out.File
	file_twitter_tweet_tweet_proto_rawDesc = nil
	file_twitter_tweet_tweet_proto_goTypes = nil
	file_twitter_tweet_tweet_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TweetServiceClient is the client API for TweetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TweetServiceClient interface {
	CreateTweet(ctx context.Context, in *rpc.CreateTweetRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetTweetTL(ctx context.Context, in *rpc.GetTweetTLRequest, opts ...grpc.CallOption) (*rpc.GetTweetTLResponse, error)
	DeteleTweet(ctx context.Context, in *rpc.DeleteTweetRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type tweetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTweetServiceClient(cc grpc.ClientConnInterface) TweetServiceClient {
	return &tweetServiceClient{cc}
}

func (c *tweetServiceClient) CreateTweet(ctx context.Context, in *rpc.CreateTweetRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/twitter.tweet.TweetService/CreateTweet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tweetServiceClient) GetTweetTL(ctx context.Context, in *rpc.GetTweetTLRequest, opts ...grpc.CallOption) (*rpc.GetTweetTLResponse, error) {
	out := new(rpc.GetTweetTLResponse)
	err := c.cc.Invoke(ctx, "/twitter.tweet.TweetService/GetTweetTL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tweetServiceClient) DeteleTweet(ctx context.Context, in *rpc.DeleteTweetRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/twitter.tweet.TweetService/DeteleTweet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TweetServiceServer is the server API for TweetService service.
type TweetServiceServer interface {
	CreateTweet(context.Context, *rpc.CreateTweetRequest) (*emptypb.Empty, error)
	GetTweetTL(context.Context, *rpc.GetTweetTLRequest) (*rpc.GetTweetTLResponse, error)
	DeteleTweet(context.Context, *rpc.DeleteTweetRequest) (*emptypb.Empty, error)
}

// UnimplementedTweetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTweetServiceServer struct {
}

func (*UnimplementedTweetServiceServer) CreateTweet(context.Context, *rpc.CreateTweetRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTweet not implemented")
}
func (*UnimplementedTweetServiceServer) GetTweetTL(context.Context, *rpc.GetTweetTLRequest) (*rpc.GetTweetTLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTweetTL not implemented")
}
func (*UnimplementedTweetServiceServer) DeteleTweet(context.Context, *rpc.DeleteTweetRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeteleTweet not implemented")
}

func RegisterTweetServiceServer(s *grpc.Server, srv TweetServiceServer) {
	s.RegisterService(&_TweetService_serviceDesc, srv)
}

func _TweetService_CreateTweet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(rpc.CreateTweetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TweetServiceServer).CreateTweet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/twitter.tweet.TweetService/CreateTweet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TweetServiceServer).CreateTweet(ctx, req.(*rpc.CreateTweetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TweetService_GetTweetTL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(rpc.GetTweetTLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TweetServiceServer).GetTweetTL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/twitter.tweet.TweetService/GetTweetTL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TweetServiceServer).GetTweetTL(ctx, req.(*rpc.GetTweetTLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TweetService_DeteleTweet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(rpc.DeleteTweetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TweetServiceServer).DeteleTweet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/twitter.tweet.TweetService/DeteleTweet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TweetServiceServer).DeteleTweet(ctx, req.(*rpc.DeleteTweetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TweetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "twitter.tweet.TweetService",
	HandlerType: (*TweetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTweet",
			Handler:    _TweetService_CreateTweet_Handler,
		},
		{
			MethodName: "GetTweetTL",
			Handler:    _TweetService_GetTweetTL_Handler,
		},
		{
			MethodName: "DeteleTweet",
			Handler:    _TweetService_DeteleTweet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "twitter/tweet/tweet.proto",
}
